#pragma once

//============================================================================*/
//	include
//============================================================================*/
#include <Engine/DXClass/DXSwapChain.h>

// windows
#include <Windows.h>

// directX

// c++
#include <memory>
#include <chrono>

//============================================================================*/
//	DXCommon class
//============================================================================*/
class DXCommon {
public:
	//========================================================================*/
	//	public Methods
	//========================================================================*/

	DXCommon() = default;
	~DXCommon() = default;

	void Init(HWND hwnd);

private:
	//========================================================================*/
	//	private Methods
	//========================================================================*/

	//========================================================================*/
	//* variables

	std::chrono::steady_clock::time_point reference_;

	std::unique_ptr<DXSwapChain> swapChain_;

	//========================================================================*/
	//* functions

	void DebugLayer();
	void DebugInfo();

};